// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Aevatar.HomeAssistantClient.States.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \states\{entity_id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithEntity_ItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.States.Item.WithEntity_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithEntity_ItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/states/{entity_id}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.States.Item.WithEntity_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithEntity_ItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/states/{entity_id}", rawUrl)
        {
        }
        /// <summary>
        /// Deletes an entity with the specified `entity_id`.Sample `curl` command:```curl \  -X DELETE \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  http://localhost:8123/api/states/sensor.kitchen_temperature```
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.States.Item.WithEntity_DeleteResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_DeleteResponse?> DeleteAsWithEntity_DeleteResponseAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_DeleteResponse> DeleteAsWithEntity_DeleteResponseAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToDeleteRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_DeleteResponse>(requestInfo, global::Aevatar.HomeAssistantClient.States.Item.WithEntity_DeleteResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Deletes an entity with the specified `entity_id`.Sample `curl` command:```curl \  -X DELETE \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  http://localhost:8123/api/states/sensor.kitchen_temperature```
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use DeleteAsWithEntity_DeleteResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response?> DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response> DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToDeleteRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response>(requestInfo, global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a state object for specified `entity_id`. Returns 404 if not found.```{    &quot;entity_id&quot;: &quot;fan.xiaomi_cn_780517083_va3_s_2_air_purifier&quot;,    &quot;state&quot;: &quot;off&quot;,    &quot;attributes&quot;: {        &quot;preset_modes&quot;: [            &quot;自动&quot;,            &quot;睡眠&quot;,            &quot;最爱&quot;,            &quot;手动&quot;        ],        &quot;percentage&quot;: 100,        &quot;percentage_step&quot;: 33.333333333333336,        &quot;preset_mode&quot;: &quot;自动&quot;,        &quot;friendly_name&quot;: &quot;米家空气净化器 5S  空气净化器&quot;,        &quot;supported_features&quot;: 57    },    &quot;last_changed&quot;: &quot;2025-10-10T10:51:05.596770+00:00&quot;,    &quot;last_reported&quot;: &quot;2025-10-10T10:51:05.859254+00:00&quot;,    &quot;last_updated&quot;: &quot;2025-10-10T10:51:05.596770+00:00&quot;,    &quot;context&quot;: {        &quot;id&quot;: &quot;01K76VXTNEX9BB1G9G20CTDCSK&quot;,        &quot;parent_id&quot;: null,        &quot;user_id&quot;: &quot;f02e639999bf41648f9cd8da3fac21ba&quot;    }}```Sample `curl` command:```curl \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  http://localhost:8123/api/states/sensor.kitchen_temperature```
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.States.Item.WithEntity_GetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_GetResponse?> GetAsWithEntity_GetResponseAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_GetResponse> GetAsWithEntity_GetResponseAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_GetResponse>(requestInfo, global::Aevatar.HomeAssistantClient.States.Item.WithEntity_GetResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a state object for specified `entity_id`. Returns 404 if not found.```{    &quot;entity_id&quot;: &quot;fan.xiaomi_cn_780517083_va3_s_2_air_purifier&quot;,    &quot;state&quot;: &quot;off&quot;,    &quot;attributes&quot;: {        &quot;preset_modes&quot;: [            &quot;自动&quot;,            &quot;睡眠&quot;,            &quot;最爱&quot;,            &quot;手动&quot;        ],        &quot;percentage&quot;: 100,        &quot;percentage_step&quot;: 33.333333333333336,        &quot;preset_mode&quot;: &quot;自动&quot;,        &quot;friendly_name&quot;: &quot;米家空气净化器 5S  空气净化器&quot;,        &quot;supported_features&quot;: 57    },    &quot;last_changed&quot;: &quot;2025-10-10T10:51:05.596770+00:00&quot;,    &quot;last_reported&quot;: &quot;2025-10-10T10:51:05.859254+00:00&quot;,    &quot;last_updated&quot;: &quot;2025-10-10T10:51:05.596770+00:00&quot;,    &quot;context&quot;: {        &quot;id&quot;: &quot;01K76VXTNEX9BB1G9G20CTDCSK&quot;,        &quot;parent_id&quot;: null,        &quot;user_id&quot;: &quot;f02e639999bf41648f9cd8da3fac21ba&quot;    }}```Sample `curl` command:```curl \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  http://localhost:8123/api/states/sensor.kitchen_temperature```
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use GetAsWithEntity_GetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response>(requestInfo, global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Updates or creates a state. You can create any state that you want, it does not have to be backed by an entity in Home Assistant.&gt; This endpoint sets the representation of a device within Home Assistant and will not communicate with the actual device. To communicate with the device, use the `POST /api/services/&lt;domain&gt;/&lt;service&gt;` endpoint.Expects a JSON object that has at least a state attribute:```{    &quot;state&quot;: &quot;below_horizon&quot;,    &quot;attributes&quot;: {        &quot;next_rising&quot;:&quot;2016-05-31T03:39:14+00:00&quot;,        &quot;next_setting&quot;:&quot;2016-05-31T19:16:42+00:00&quot;    }}```The return code is 200 if the entity existed, 201 if the state of a new entity was set. A location header will be returned with the URL of the new resource. The response body will contain a JSON encoded State object.```{    &quot;attributes&quot;: {        &quot;next_rising&quot;:&quot;2016-05-31T03:39:14+00:00&quot;,        &quot;next_setting&quot;:&quot;2016-05-31T19:16:42+00:00&quot;    },    &quot;entity_id&quot;: &quot;sun.sun&quot;,    &quot;last_changed&quot;: &quot;2016-05-30T21:43:29.204838+00:00&quot;,    &quot;last_updated&quot;: &quot;2016-05-30T21:47:30.533530+00:00&quot;,    &quot;state&quot;: &quot;below_horizon&quot;}```Sample `curl` command:```curl \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  -d &apos;{&quot;state&quot;: &quot;25&quot;, &quot;attributes&quot;: {&quot;unit_of_measurement&quot;: &quot;°C&quot;}}&apos; \  http://localhost:8123/api/states/sensor.kitchen_temperature```Sample `python` command using the [Requests](https://requests.readthedocs.io/en/latest/) module:```from requests import posturl = &quot;http://localhost:8123/api/states/sensor.kitchen_temperature&quot;headers = {&quot;Authorization&quot;: &quot;Bearer TOKEN&quot;, &quot;content-type&quot;: &quot;application/json&quot;}data = {&quot;state&quot;: &quot;25&quot;, &quot;attributes&quot;: {&quot;unit_of_measurement&quot;: &quot;°C&quot;}}response = post(url, headers=headers, json=data)print(response.text)```
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostResponse?> PostAsWithEntity_PostResponseAsync(global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostResponse> PostAsWithEntity_PostResponseAsync(global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostResponse>(requestInfo, global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Updates or creates a state. You can create any state that you want, it does not have to be backed by an entity in Home Assistant.&gt; This endpoint sets the representation of a device within Home Assistant and will not communicate with the actual device. To communicate with the device, use the `POST /api/services/&lt;domain&gt;/&lt;service&gt;` endpoint.Expects a JSON object that has at least a state attribute:```{    &quot;state&quot;: &quot;below_horizon&quot;,    &quot;attributes&quot;: {        &quot;next_rising&quot;:&quot;2016-05-31T03:39:14+00:00&quot;,        &quot;next_setting&quot;:&quot;2016-05-31T19:16:42+00:00&quot;    }}```The return code is 200 if the entity existed, 201 if the state of a new entity was set. A location header will be returned with the URL of the new resource. The response body will contain a JSON encoded State object.```{    &quot;attributes&quot;: {        &quot;next_rising&quot;:&quot;2016-05-31T03:39:14+00:00&quot;,        &quot;next_setting&quot;:&quot;2016-05-31T19:16:42+00:00&quot;    },    &quot;entity_id&quot;: &quot;sun.sun&quot;,    &quot;last_changed&quot;: &quot;2016-05-30T21:43:29.204838+00:00&quot;,    &quot;last_updated&quot;: &quot;2016-05-30T21:47:30.533530+00:00&quot;,    &quot;state&quot;: &quot;below_horizon&quot;}```Sample `curl` command:```curl \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  -d &apos;{&quot;state&quot;: &quot;25&quot;, &quot;attributes&quot;: {&quot;unit_of_measurement&quot;: &quot;°C&quot;}}&apos; \  http://localhost:8123/api/states/sensor.kitchen_temperature```Sample `python` command using the [Requests](https://requests.readthedocs.io/en/latest/) module:```from requests import posturl = &quot;http://localhost:8123/api/states/sensor.kitchen_temperature&quot;headers = {&quot;Authorization&quot;: &quot;Bearer TOKEN&quot;, &quot;content-type&quot;: &quot;application/json&quot;}data = {&quot;state&quot;: &quot;25&quot;, &quot;attributes&quot;: {&quot;unit_of_measurement&quot;: &quot;°C&quot;}}response = post(url, headers=headers, json=data)print(response.text)```
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use PostAsWithEntity_PostResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response?> PostAsync(global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response> PostAsync(global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response>(requestInfo, global::Aevatar.HomeAssistantClient.States.Item.WithEntity_Response.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Deletes an entity with the specified `entity_id`.Sample `curl` command:```curl \  -X DELETE \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  http://localhost:8123/api/states/sensor.kitchen_temperature```
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a state object for specified `entity_id`. Returns 404 if not found.```{    &quot;entity_id&quot;: &quot;fan.xiaomi_cn_780517083_va3_s_2_air_purifier&quot;,    &quot;state&quot;: &quot;off&quot;,    &quot;attributes&quot;: {        &quot;preset_modes&quot;: [            &quot;自动&quot;,            &quot;睡眠&quot;,            &quot;最爱&quot;,            &quot;手动&quot;        ],        &quot;percentage&quot;: 100,        &quot;percentage_step&quot;: 33.333333333333336,        &quot;preset_mode&quot;: &quot;自动&quot;,        &quot;friendly_name&quot;: &quot;米家空气净化器 5S  空气净化器&quot;,        &quot;supported_features&quot;: 57    },    &quot;last_changed&quot;: &quot;2025-10-10T10:51:05.596770+00:00&quot;,    &quot;last_reported&quot;: &quot;2025-10-10T10:51:05.859254+00:00&quot;,    &quot;last_updated&quot;: &quot;2025-10-10T10:51:05.596770+00:00&quot;,    &quot;context&quot;: {        &quot;id&quot;: &quot;01K76VXTNEX9BB1G9G20CTDCSK&quot;,        &quot;parent_id&quot;: null,        &quot;user_id&quot;: &quot;f02e639999bf41648f9cd8da3fac21ba&quot;    }}```Sample `curl` command:```curl \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  http://localhost:8123/api/states/sensor.kitchen_temperature```
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Updates or creates a state. You can create any state that you want, it does not have to be backed by an entity in Home Assistant.&gt; This endpoint sets the representation of a device within Home Assistant and will not communicate with the actual device. To communicate with the device, use the `POST /api/services/&lt;domain&gt;/&lt;service&gt;` endpoint.Expects a JSON object that has at least a state attribute:```{    &quot;state&quot;: &quot;below_horizon&quot;,    &quot;attributes&quot;: {        &quot;next_rising&quot;:&quot;2016-05-31T03:39:14+00:00&quot;,        &quot;next_setting&quot;:&quot;2016-05-31T19:16:42+00:00&quot;    }}```The return code is 200 if the entity existed, 201 if the state of a new entity was set. A location header will be returned with the URL of the new resource. The response body will contain a JSON encoded State object.```{    &quot;attributes&quot;: {        &quot;next_rising&quot;:&quot;2016-05-31T03:39:14+00:00&quot;,        &quot;next_setting&quot;:&quot;2016-05-31T19:16:42+00:00&quot;    },    &quot;entity_id&quot;: &quot;sun.sun&quot;,    &quot;last_changed&quot;: &quot;2016-05-30T21:43:29.204838+00:00&quot;,    &quot;last_updated&quot;: &quot;2016-05-30T21:47:30.533530+00:00&quot;,    &quot;state&quot;: &quot;below_horizon&quot;}```Sample `curl` command:```curl \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  -d &apos;{&quot;state&quot;: &quot;25&quot;, &quot;attributes&quot;: {&quot;unit_of_measurement&quot;: &quot;°C&quot;}}&apos; \  http://localhost:8123/api/states/sensor.kitchen_temperature```Sample `python` command using the [Requests](https://requests.readthedocs.io/en/latest/) module:```from requests import posturl = &quot;http://localhost:8123/api/states/sensor.kitchen_temperature&quot;headers = {&quot;Authorization&quot;: &quot;Bearer TOKEN&quot;, &quot;content-type&quot;: &quot;application/json&quot;}data = {&quot;state&quot;: &quot;25&quot;, &quot;attributes&quot;: {&quot;unit_of_measurement&quot;: &quot;°C&quot;}}response = post(url, headers=headers, json=data)print(response.text)```
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Aevatar.HomeAssistantClient.States.Item.WithEntity_PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.States.Item.WithEntity_ItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Aevatar.HomeAssistantClient.States.Item.WithEntity_ItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Aevatar.HomeAssistantClient.States.Item.WithEntity_ItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithEntity_ItemRequestBuilderDeleteRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithEntity_ItemRequestBuilderGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithEntity_ItemRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
