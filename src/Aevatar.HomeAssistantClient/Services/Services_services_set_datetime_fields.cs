// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Aevatar.HomeAssistantClient.Services
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Services_services_set_datetime_fields : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The date property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_date? Date { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_date Date { get; set; }
#endif
        /// <summary>The datetime property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_datetime? Datetime { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_datetime Datetime { get; set; }
#endif
        /// <summary>The time property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_time? Time { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_time Time { get; set; }
#endif
        /// <summary>The timestamp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_timestamp? Timestamp { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_timestamp Timestamp { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields"/> and sets the default values.
        /// </summary>
        public Services_services_set_datetime_fields()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "date", n => { Date = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_date>(global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_date.CreateFromDiscriminatorValue); } },
                { "datetime", n => { Datetime = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_datetime>(global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_datetime.CreateFromDiscriminatorValue); } },
                { "time", n => { Time = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_time>(global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_time.CreateFromDiscriminatorValue); } },
                { "timestamp", n => { Timestamp = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_timestamp>(global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_timestamp.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_date>("date", Date);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_datetime>("datetime", Datetime);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_time>("time", Time);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_datetime_fields_timestamp>("timestamp", Timestamp);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
