// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Aevatar.HomeAssistantClient.Services
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Services_services_turn_off_fields_advanced_fields_fields_flash_selector_select : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The custom_value property</summary>
        public bool? CustomValue { get; set; }
        /// <summary>The multiple property</summary>
        public bool? Multiple { get; set; }
        /// <summary>The options property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Options { get; set; }
#nullable restore
#else
        public List<string> Options { get; set; }
#endif
        /// <summary>The sort property</summary>
        public bool? Sort { get; set; }
        /// <summary>The translation_key property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TranslationKey { get; set; }
#nullable restore
#else
        public string TranslationKey { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_turn_off_fields_advanced_fields_fields_flash_selector_select"/> and sets the default values.
        /// </summary>
        public Services_services_turn_off_fields_advanced_fields_fields_flash_selector_select()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_turn_off_fields_advanced_fields_fields_flash_selector_select"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Aevatar.HomeAssistantClient.Services.Services_services_turn_off_fields_advanced_fields_fields_flash_selector_select CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Aevatar.HomeAssistantClient.Services.Services_services_turn_off_fields_advanced_fields_fields_flash_selector_select();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "custom_value", n => { CustomValue = n.GetBoolValue(); } },
                { "multiple", n => { Multiple = n.GetBoolValue(); } },
                { "options", n => { Options = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "sort", n => { Sort = n.GetBoolValue(); } },
                { "translation_key", n => { TranslationKey = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("custom_value", CustomValue);
            writer.WriteBoolValue("multiple", Multiple);
            writer.WriteCollectionOfPrimitiveValues<string>("options", Options);
            writer.WriteBoolValue("sort", Sort);
            writer.WriteStringValue("translation_key", TranslationKey);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
