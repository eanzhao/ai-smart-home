// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Aevatar.HomeAssistantClient.Services
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Services_services_toggle_fields : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The advanced_fields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_advanced_fields? AdvancedFields { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_advanced_fields AdvancedFields { get; set; }
#endif
        /// <summary>The brightness_pct property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_brightness_pct? BrightnessPct { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_brightness_pct BrightnessPct { get; set; }
#endif
        /// <summary>The color_temp_kelvin property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_color_temp_kelvin? ColorTempKelvin { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_color_temp_kelvin ColorTempKelvin { get; set; }
#endif
        /// <summary>The effect property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_effect? Effect { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_effect Effect { get; set; }
#endif
        /// <summary>The rgb_color property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_rgb_color? RgbColor { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_rgb_color RgbColor { get; set; }
#endif
        /// <summary>The transition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_transition? Transition { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_transition Transition { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields"/> and sets the default values.
        /// </summary>
        public Services_services_toggle_fields()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "advanced_fields", n => { AdvancedFields = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_advanced_fields>(global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_advanced_fields.CreateFromDiscriminatorValue); } },
                { "brightness_pct", n => { BrightnessPct = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_brightness_pct>(global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_brightness_pct.CreateFromDiscriminatorValue); } },
                { "color_temp_kelvin", n => { ColorTempKelvin = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_color_temp_kelvin>(global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_color_temp_kelvin.CreateFromDiscriminatorValue); } },
                { "effect", n => { Effect = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_effect>(global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_effect.CreateFromDiscriminatorValue); } },
                { "rgb_color", n => { RgbColor = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_rgb_color>(global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_rgb_color.CreateFromDiscriminatorValue); } },
                { "transition", n => { Transition = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_transition>(global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_transition.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_advanced_fields>("advanced_fields", AdvancedFields);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_brightness_pct>("brightness_pct", BrightnessPct);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_color_temp_kelvin>("color_temp_kelvin", ColorTempKelvin);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_effect>("effect", Effect);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_rgb_color>("rgb_color", RgbColor);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_toggle_fields_transition>("transition", Transition);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
