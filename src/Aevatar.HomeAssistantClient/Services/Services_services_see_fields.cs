// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Aevatar.HomeAssistantClient.Services
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Services_services_see_fields : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The battery property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_battery? Battery { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_battery Battery { get; set; }
#endif
        /// <summary>The dev_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_dev_id? DevId { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_dev_id DevId { get; set; }
#endif
        /// <summary>The gps property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps? Gps { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps Gps { get; set; }
#endif
        /// <summary>The gps_accuracy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps_accuracy? GpsAccuracy { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps_accuracy GpsAccuracy { get; set; }
#endif
        /// <summary>The host_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_host_name? HostName { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_host_name HostName { get; set; }
#endif
        /// <summary>The location_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_location_name? LocationName { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_location_name LocationName { get; set; }
#endif
        /// <summary>The mac property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_mac? Mac { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_mac Mac { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields"/> and sets the default values.
        /// </summary>
        public Services_services_see_fields()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "battery", n => { Battery = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_battery>(global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_battery.CreateFromDiscriminatorValue); } },
                { "dev_id", n => { DevId = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_dev_id>(global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_dev_id.CreateFromDiscriminatorValue); } },
                { "gps", n => { Gps = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps>(global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps.CreateFromDiscriminatorValue); } },
                { "gps_accuracy", n => { GpsAccuracy = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps_accuracy>(global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps_accuracy.CreateFromDiscriminatorValue); } },
                { "host_name", n => { HostName = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_host_name>(global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_host_name.CreateFromDiscriminatorValue); } },
                { "location_name", n => { LocationName = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_location_name>(global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_location_name.CreateFromDiscriminatorValue); } },
                { "mac", n => { Mac = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_mac>(global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_mac.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_battery>("battery", Battery);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_dev_id>("dev_id", DevId);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps>("gps", Gps);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_gps_accuracy>("gps_accuracy", GpsAccuracy);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_host_name>("host_name", HostName);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_location_name>("location_name", LocationName);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_see_fields_mac>("mac", Mac);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
