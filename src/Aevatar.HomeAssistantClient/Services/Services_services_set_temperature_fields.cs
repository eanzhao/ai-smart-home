// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Aevatar.HomeAssistantClient.Services
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Services_services_set_temperature_fields : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The hvac_mode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_hvac_mode? HvacMode { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_hvac_mode HvacMode { get; set; }
#endif
        /// <summary>The operation_mode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_operation_mode? OperationMode { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_operation_mode OperationMode { get; set; }
#endif
        /// <summary>The target_temp_high property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_high? TargetTempHigh { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_high TargetTempHigh { get; set; }
#endif
        /// <summary>The target_temp_low property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_low? TargetTempLow { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_low TargetTempLow { get; set; }
#endif
        /// <summary>The temperature property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_temperature? Temperature { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_temperature Temperature { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields"/> and sets the default values.
        /// </summary>
        public Services_services_set_temperature_fields()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "hvac_mode", n => { HvacMode = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_hvac_mode>(global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_hvac_mode.CreateFromDiscriminatorValue); } },
                { "operation_mode", n => { OperationMode = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_operation_mode>(global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_operation_mode.CreateFromDiscriminatorValue); } },
                { "target_temp_high", n => { TargetTempHigh = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_high>(global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_high.CreateFromDiscriminatorValue); } },
                { "target_temp_low", n => { TargetTempLow = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_low>(global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_low.CreateFromDiscriminatorValue); } },
                { "temperature", n => { Temperature = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_temperature>(global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_temperature.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_hvac_mode>("hvac_mode", HvacMode);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_operation_mode>("operation_mode", OperationMode);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_high>("target_temp_high", TargetTempHigh);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_target_temp_low>("target_temp_low", TargetTempLow);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Services.Services_services_set_temperature_fields_temperature>("temperature", Temperature);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
