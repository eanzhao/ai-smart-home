// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Aevatar.HomeAssistantClient.Logbook.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithTimestamp : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The context_domain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContextDomain { get; set; }
#nullable restore
#else
        public string ContextDomain { get; set; }
#endif
        /// <summary>The context_event_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContextEventType { get; set; }
#nullable restore
#else
        public string ContextEventType { get; set; }
#endif
        /// <summary>The context_service property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContextService { get; set; }
#nullable restore
#else
        public string ContextService { get; set; }
#endif
        /// <summary>The context_user_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContextUserId { get; set; }
#nullable restore
#else
        public string ContextUserId { get; set; }
#endif
        /// <summary>The entity_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EntityId { get; set; }
#nullable restore
#else
        public string EntityId { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>The when property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? When { get; set; }
#nullable restore
#else
        public string When { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.Logbook.Item.WithTimestamp"/> and sets the default values.
        /// </summary>
        public WithTimestamp()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.Logbook.Item.WithTimestamp"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Aevatar.HomeAssistantClient.Logbook.Item.WithTimestamp CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Aevatar.HomeAssistantClient.Logbook.Item.WithTimestamp();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "context_domain", n => { ContextDomain = n.GetStringValue(); } },
                { "context_event_type", n => { ContextEventType = n.GetStringValue(); } },
                { "context_service", n => { ContextService = n.GetStringValue(); } },
                { "context_user_id", n => { ContextUserId = n.GetStringValue(); } },
                { "entity_id", n => { EntityId = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "state", n => { State = n.GetStringValue(); } },
                { "when", n => { When = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("context_domain", ContextDomain);
            writer.WriteStringValue("context_event_type", ContextEventType);
            writer.WriteStringValue("context_service", ContextService);
            writer.WriteStringValue("context_user_id", ContextUserId);
            writer.WriteStringValue("entity_id", EntityId);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("state", State);
            writer.WriteStringValue("when", When);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
