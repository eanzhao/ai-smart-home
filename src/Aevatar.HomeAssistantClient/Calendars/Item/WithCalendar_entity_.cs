// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Aevatar.HomeAssistantClient.Calendars.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithCalendar_entity_ : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The end property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__end? End { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__end End { get; set; }
#endif
        /// <summary>The location property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Location { get; set; }
#nullable restore
#else
        public UntypedNode Location { get; set; }
#endif
        /// <summary>The recurrence_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? RecurrenceId { get; set; }
#nullable restore
#else
        public UntypedNode RecurrenceId { get; set; }
#endif
        /// <summary>The rrule property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Rrule { get; set; }
#nullable restore
#else
        public UntypedNode Rrule { get; set; }
#endif
        /// <summary>The start property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__start? Start { get; set; }
#nullable restore
#else
        public global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__start Start { get; set; }
#endif
        /// <summary>The summary property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Summary { get; set; }
#nullable restore
#else
        public string Summary { get; set; }
#endif
        /// <summary>The uid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uid { get; set; }
#nullable restore
#else
        public string Uid { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_"/> and sets the default values.
        /// </summary>
        public WithCalendar_entity_()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "description", n => { Description = n.GetStringValue(); } },
                { "end", n => { End = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__end>(global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__end.CreateFromDiscriminatorValue); } },
                { "location", n => { Location = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "recurrence_id", n => { RecurrenceId = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "rrule", n => { Rrule = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "start", n => { Start = n.GetObjectValue<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__start>(global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__start.CreateFromDiscriminatorValue); } },
                { "summary", n => { Summary = n.GetStringValue(); } },
                { "uid", n => { Uid = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__end>("end", End);
            writer.WriteObjectValue<UntypedNode>("location", Location);
            writer.WriteObjectValue<UntypedNode>("recurrence_id", RecurrenceId);
            writer.WriteObjectValue<UntypedNode>("rrule", Rrule);
            writer.WriteObjectValue<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity__start>("start", Start);
            writer.WriteStringValue("summary", Summary);
            writer.WriteStringValue("uid", Uid);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
