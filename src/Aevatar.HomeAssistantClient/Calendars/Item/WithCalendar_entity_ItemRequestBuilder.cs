// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Aevatar.HomeAssistantClient.Calendars.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \calendars\{calendar_entity_id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithCalendar_entity_ItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithCalendar_entity_ItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/calendars/{calendar_entity_id}{?end*,start*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithCalendar_entity_ItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/calendars/{calendar_entity_id}{?end*,start*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns the list of [calendar events](https://developers.home-assistant.io/docs/core/entity/calendar/#calendarevent) for the specified calendar `entity_id` between the `start` and `end` times (exclusive).The events in the response have a `start` and `end` that contain either `dateTime` or `date` for an all day event.```[  {    &quot;summary&quot;: &quot;Cinco de Mayo&quot;,    &quot;start&quot;: {      &quot;date&quot;: &quot;2022-05-05&quot;    },    &quot;end&quot;: {      &quot;date&quot;: &quot;2022-05-06&quot;    },  },  {    &quot;summary&quot;: &quot;Birthday Party&quot;,    &quot;start&quot;: {      &quot;dateTime&quot;: &quot;2022-05-06T20:00:00-07:00&quot;    },    &quot;end&quot;: {      &quot;dateTime&quot;: &quot;2022-05-06T23:00:00-07:00&quot;    },    &quot;description&quot;: &quot;Don&apos;t forget to bring balloons&quot;,    &quot;location&quot;: &quot;Brian&apos;s House&quot;  }]```Sample `curl` command:```curl \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  &quot;http://localhost:8123/api/calendars/calendar.holidays?start=2022-05-01T07:00:00.000Z&amp;end=2022-06-12T07:00:00.000Z&quot;```
        /// </summary>
        /// <returns>A List&lt;global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_>?> GetAsync(Action<RequestConfiguration<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder.WithCalendar_entity_ItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_>> GetAsync(Action<RequestConfiguration<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder.WithCalendar_entity_ItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_>(requestInfo, global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <summary>
        /// Returns the list of [calendar events](https://developers.home-assistant.io/docs/core/entity/calendar/#calendarevent) for the specified calendar `entity_id` between the `start` and `end` times (exclusive).The events in the response have a `start` and `end` that contain either `dateTime` or `date` for an all day event.```[  {    &quot;summary&quot;: &quot;Cinco de Mayo&quot;,    &quot;start&quot;: {      &quot;date&quot;: &quot;2022-05-05&quot;    },    &quot;end&quot;: {      &quot;date&quot;: &quot;2022-05-06&quot;    },  },  {    &quot;summary&quot;: &quot;Birthday Party&quot;,    &quot;start&quot;: {      &quot;dateTime&quot;: &quot;2022-05-06T20:00:00-07:00&quot;    },    &quot;end&quot;: {      &quot;dateTime&quot;: &quot;2022-05-06T23:00:00-07:00&quot;    },    &quot;description&quot;: &quot;Don&apos;t forget to bring balloons&quot;,    &quot;location&quot;: &quot;Brian&apos;s House&quot;  }]```Sample `curl` command:```curl \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  &quot;http://localhost:8123/api/calendars/calendar.holidays?start=2022-05-01T07:00:00.000Z&amp;end=2022-06-12T07:00:00.000Z&quot;```
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder.WithCalendar_entity_ItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder.WithCalendar_entity_ItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns the list of [calendar events](https://developers.home-assistant.io/docs/core/entity/calendar/#calendarevent) for the specified calendar `entity_id` between the `start` and `end` times (exclusive).The events in the response have a `start` and `end` that contain either `dateTime` or `date` for an all day event.```[  {    &quot;summary&quot;: &quot;Cinco de Mayo&quot;,    &quot;start&quot;: {      &quot;date&quot;: &quot;2022-05-05&quot;    },    &quot;end&quot;: {      &quot;date&quot;: &quot;2022-05-06&quot;    },  },  {    &quot;summary&quot;: &quot;Birthday Party&quot;,    &quot;start&quot;: {      &quot;dateTime&quot;: &quot;2022-05-06T20:00:00-07:00&quot;    },    &quot;end&quot;: {      &quot;dateTime&quot;: &quot;2022-05-06T23:00:00-07:00&quot;    },    &quot;description&quot;: &quot;Don&apos;t forget to bring balloons&quot;,    &quot;location&quot;: &quot;Brian&apos;s House&quot;  }]```Sample `curl` command:```curl \  -H &quot;Authorization: Bearer TOKEN&quot; \  -H &quot;Content-Type: application/json&quot; \  &quot;http://localhost:8123/api/calendars/calendar.holidays?start=2022-05-01T07:00:00.000Z&amp;end=2022-06-12T07:00:00.000Z&quot;```
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithCalendar_entity_ItemRequestBuilderGetQueryParameters 
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("end")]
            public string? End { get; set; }
#nullable restore
#else
            [QueryParameter("end")]
            public string End { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("start")]
            public string? Start { get; set; }
#nullable restore
#else
            [QueryParameter("start")]
            public string Start { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithCalendar_entity_ItemRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Aevatar.HomeAssistantClient.Calendars.Item.WithCalendar_entity_ItemRequestBuilder.WithCalendar_entity_ItemRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
